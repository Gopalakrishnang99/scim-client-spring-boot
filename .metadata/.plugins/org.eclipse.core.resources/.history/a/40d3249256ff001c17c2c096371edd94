package com.nex.spring.scim.service;

import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.nex.spring.scim.dto.Address;
import com.nex.spring.scim.dto.UserResource;
import com.nex.spring.scim.model.AddressDetails;
import com.nex.spring.scim.model.UserDetails;
import com.nex.spring.scim.repository.AddressRepository;
import com.nex.spring.scim.repository.EmailRepository;
import com.nex.spring.scim.repository.PhoneNumberRepository;
import com.nex.spring.scim.repository.UserRepository;

@Service
public class UserService {
	
	@Autowired
	UserRepository userRepo;
	
	@Autowired
	AddressRepository addressRepo;
	
	@Autowired
	EmailRepository emailRepo;
	
	@Autowired
	PhoneNumberRepository phoneNumbeRepo;
	
	@Transactional
	public void createUser(UserResource userResource) {
		UserDetails user=new UserDetails();

		user.setUserName(userResource.getUserName());
		user.setDisplayName(userResource.getDisplayName());
		user.setGivenName(userResource.getName().getGivenName());
		user.setFamilyName(userResource.getName().getFamilyName());
		user.setNickName(userResource.getNickName());
		user.setTitle(userResource.getTitle());
		user.setUserType(userResource.getUseType());
		user.setActive(userResource.isActive());
		user.setCreated(LocalDateTime.now());
		user.setLastModified(LocalDateTime.now());
		user.setEmployeeNumber(userResource.getEnterpriseUser().getEmployeeNumber());
		user.setCostCenter(userResource.getEnterpriseUser().getCostCenter());
		user.setOrganization(userResource.getEnterpriseUser().getOrganization());
		user.setDivision(userResource.getEnterpriseUser().getDivision());
		user.setDepartment(userResource.getEnterpriseUser().getDepartment());
		user.setManagerId(Long.valueOf(userResource.getEnterpriseUser().getManager().getValue()));
		
		
		
		userRepo.save(user);
	}
	
	private Set<AddressDetails> createAddressModels(Address[] addresses){
		Set<AddressDetails> addressesModel=new HashSet<>();
		for(Address add:addresses) {
			AddressDetails addressModel=new AddressDetails();
			addressModel.setStreetAddress(add.getStreetAddress());
			addressModel.setLocality(add.getLocality());
			addressModel.setRegion(add.getRegion());
			addressModel.setCountry(add.getCountry());
			addressModel.setPostalCode(add.getPostalCode());
			addressModel.setType(add.getType());
			addressesModel.add(addressModel);
		}
		return addressesModel;
	}
}
